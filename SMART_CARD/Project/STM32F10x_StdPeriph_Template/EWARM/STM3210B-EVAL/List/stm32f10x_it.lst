###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.7.9843/W32 for ARM        05/Feb/2018  13:40:56
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\stm32f10x_it.c
#    Command line =  
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\stm32f10x_it.c
#        -D USE_STDPERIPH_DRIVER -D STM32F10X_MD -D USE_STM3210B_EVAL -lcN
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\STM3210B-EVAL\List
#        -o
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\STM3210B-EVAL\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Full.h" -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\BSP\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\uC-CPU\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\uC-LIB\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\uC-LIB\Ports\ARM-Cortex-M3\IAR\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\uCOS-III\Source\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\Libraries\CMSIS\CM3\CoreSupport\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\Utility\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\network_layer\nwl_uart1\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\network_layer\nwl_uart2\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\user_debug\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\dev_manage\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\modem\sim800\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\protocol_communication\protocol_jt808\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\rtc\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\gps\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\network_layer\nwl_uart3\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\modem\quecelMC20\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\rf\
#        -I
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\internal_flash\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.2\arm\CMSIS\Include\"
#    List file    =  
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\STM3210B-EVAL\List\stm32f10x_it.lst
#    Object file  =  
#        D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\STM3210B-EVAL\Obj\stm32f10x_it.o
#
###############################################################################

D:\GitHub2\smart_box_q5\SMART_CARD\Project\STM32F10x_StdPeriph_Template\stm32f10x_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    USART/Printf/stm32f10x_it.c 
      4            * @author  MCD Application Team
      5            * @version V3.5.0
      6            * @date    08-April-2011
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all exceptions handler and peripherals
      9            *          interrupt service routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     15            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     16            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     17            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     18            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19            *
     20            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     21            ******************************************************************************
     22            */ 
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "stm32f10x_it.h"
     26          /** @addtogroup STM32F10x_StdPeriph_Examples
     27            * @{
     28            */
     29          
     30          /** @addtogroup USART_Printf
     31            * @{
     32            */ 
     33          
     34          /* Private typedef -----------------------------------------------------------*/
     35          /* Private define ------------------------------------------------------------*/
     36          /* Private macro -------------------------------------------------------------*/
     37          /* Private variables ---------------------------------------------------------*/
     38          /* Private function prototypes -----------------------------------------------*/
     39          /* Private functions ---------------------------------------------------------*/
     40          
     41          /******************************************************************************/
     42          /*            Cortex-M3 Processor Exceptions Handlers                         */
     43          /******************************************************************************/
     44          void reset_mcu(void)
     45          {
     46          //int i;
     47          //i=90;
     48          while(1);
     49          }
     50          /**
     51            * @brief  This function handles NMI exception.
     52            * @param  None
     53            * @retval None
     54            */
     55          void NMI_Handler(void)
     56          {
     57            reset_mcu();
     58          }
     59          
     60          /**
     61            * @brief  This function handles Hard Fault exception.
     62            * @param  None
     63            * @retval None
     64            */
     65          void HardFault_Handler(void)
     66          {
     67            /* Go to infinite loop when Hard Fault exception occurs */
     68            while (1)
     69            {
     70              reset_mcu();
     71            }
     72          }
     73          
     74          /**
     75            * @brief  This function handles Memory Manage exception.
     76            * @param  None
     77            * @retval None
     78            */
     79          void MemManage_Handler(void)
     80          {
     81            /* Go to infinite loop when Memory Manage exception occurs */
     82            while (1)
     83            {
     84              reset_mcu();
     85            }
     86          }
     87          
     88          /**
     89            * @brief  This function handles Bus Fault exception.
     90            * @param  None
     91            * @retval None
     92            */
     93          void BusFault_Handler(void)
     94          {
     95            /* Go to infinite loop when Bus Fault exception occurs */
     96            while (1)
     97            {
     98              reset_mcu();
     99            }
    100          }
    101          
    102          /**
    103            * @brief  This function handles Usage Fault exception.
    104            * @param  None
    105            * @retval None
    106            */
    107          void UsageFault_Handler(void)
    108          {
    109            /* Go to infinite loop when Usage Fault exception occurs */
    110            while (1)
    111            {
    112              reset_mcu();
    113            }
    114          }
    115          
    116          /**
    117            * @brief  This function handles SVCall exception.
    118            * @param  None
    119            * @retval None
    120            */
    121          void SVC_Handler(void)
    122          {
    123            reset_mcu();
    124          }
    125          
    126          /**
    127            * @brief  This function handles Debug Monitor exception.
    128            * @param  None
    129            * @retval None
    130            */
    131          void DebugMon_Handler(void)
    132          {
    133            reset_mcu();
    134          }
    135          
    136          /**
    137            * @brief  This function handles PendSV_Handler exception.
    138            * @param  None
    139            * @retval None
    140            */
    141          void PendSV_Handler(void)
    142          {
    143            reset_mcu();
    144          }
    145          
    146          /**
    147            * @brief  This function handles SysTick Handler.
    148            * @param  None
    149            * @retval None
    150            */
    151          /*void SysTick_Handler___________(void)
    152          {
    153          }*/
    154          
    155          /******************************************************************************/
    156          /*                 STM32F10x Peripherals Interrupt Handlers                   */
    157          /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
    158          /*  available peripheral interrupt handler's name please refer to the startup */
    159          /*  file (startup_stm32f10x_xx.s).                                            */
    160          /******************************************************************************/
    161          
    162          /**
    163            * @brief  This function handles PPP interrupt request.
    164            * @param  None
    165            * @retval None
    166            */
    167          /*void PPP_IRQHandler(void)
    168          {
    169          }*/
    170          
    171          /**
    172            * @}
    173            */ 
    174          
    175          /**
    176            * @}
    177            */ 
    178          
    179          
    180          void TIM1_BRK_IRQHandler(void)
    181          {
    182          	while(1);
    183          }
    184          
    185          
    186          
    187          void EXTI0_IRQHandler(void)
    188          {
    189          	if(EXTI_GetITStatus(EXTI_Line0) != RESET)
    190          	{
    191          		/* Clear the  EXTI line 0 pending bit */
    192          		EXTI_ClearITPendingBit(EXTI_Line0);
    193          		//InfoPrintf("&");
    194          		
    195          		
    196          	}
    197          }
    198          
    199          void EXTI1_IRQHandler(void)
    200          {
    201          	if(EXTI_GetITStatus(EXTI_Line1) != RESET)
    202          	{
    203          		/* Clear the  EXTI line 1 pending bit */
    204          		EXTI_ClearITPendingBit(EXTI_Line1);
    205          		//InfoPrintf("@");
    206          		
    207          		
    208          
    209          	}
    210          }
    211          
    212          void RTC_IRQHandler(void)
    213          {
    214            if (RTC_GetITStatus(RTC_IT_SEC) != RESET)
    215            {
    216              /* Clear the RTC Second interrupt */
    217              RTC_ClearITPendingBit(RTC_IT_SEC);
    218          
    219          	//InfoPrintf("cnt=%d\r\n",RTC_GetCounter());
    220              /* Wait until last write operation on RTC registers has finished */
    221              RTC_WaitForLastTask();
    222              
    223            }
    224          }
    225          
    226          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/
    227          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   BusFault_Handler
         8   -> reset_mcu
       0   DebugMon_Handler
         0   -> reset_mcu
       8   EXTI0_IRQHandler
         0   -> EXTI_ClearITPendingBit
         8   -> EXTI_GetITStatus
       8   EXTI1_IRQHandler
         0   -> EXTI_ClearITPendingBit
         8   -> EXTI_GetITStatus
       8   HardFault_Handler
         8   -> reset_mcu
       8   MemManage_Handler
         8   -> reset_mcu
       0   NMI_Handler
         0   -> reset_mcu
       0   PendSV_Handler
         0   -> reset_mcu
       8   RTC_IRQHandler
         8   -> RTC_ClearITPendingBit
         8   -> RTC_GetITStatus
         0   -> RTC_WaitForLastTask
       0   SVC_Handler
         0   -> reset_mcu
       0   TIM1_BRK_IRQHandler
       8   UsageFault_Handler
         8   -> reset_mcu
       0   reset_mcu


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  BusFault_Handler
       2  DebugMon_Handler
      24  EXTI0_IRQHandler
      24  EXTI1_IRQHandler
       8  HardFault_Handler
       8  MemManage_Handler
       2  NMI_Handler
       2  PendSV_Handler
      28  RTC_IRQHandler
       2  SVC_Handler
       2  TIM1_BRK_IRQHandler
       8  UsageFault_Handler
       2  reset_mcu

 
 120 bytes in section .text
 
 120 bytes of CODE memory

Errors: none
Warnings: none
