###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.7.9843/W32 for ARM        30/Jan/2018  14:31:32
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\SmartCardBox\SMART_CARD\Project\App\user_debug\user_debug_app.c
#    Command line =  
#        D:\SmartCardBox\SMART_CARD\Project\App\user_debug\user_debug_app.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_MD -D USE_STM3210B_EVAL -lcN
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\STM3210B-EVAL\List
#        -o
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\STM3210B-EVAL\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Full.h" -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\BSP\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\uC-CPU\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\uC-LIB\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\uC-LIB\Ports\ARM-Cortex-M3\IAR\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\uCOS-III\Source\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\OS\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\Libraries\CMSIS\CM3\CoreSupport\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\Utility\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\network_layer\nwl_uart1\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\network_layer\nwl_uart2\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\user_debug\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\dev_manage\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\modem\sim800\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\protocol_communication\protocol_jt808\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\rtc\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\gps\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\network_layer\nwl_uart3\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\modem\quecelMC20\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\rf\
#        -I
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\..\..\App\internal_flash\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.2\arm\CMSIS\Include\"
#    List file    =  
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\STM3210B-EVAL\List\user_debug_app.lst
#    Object file  =  
#        D:\SmartCardBox\SMART_CARD\Project\STM32F10x_StdPeriph_Template\EWARM\STM3210B-EVAL\Obj\user_debug_app.o
#
###############################################################################

D:\SmartCardBox\SMART_CARD\Project\App\user_debug\user_debug_app.c
      1          //porting head files
      2          #include "user_debug_app.h"
      3          #include "heads.h"
      4          
      5          //static head file
      6          #include <stdio.h>
      7          #include <stdarg.h>
      8          #include <string.h>
      9          #include <stdint.h>
     10          
     11          #if 1
     12          #define PRINT_USE_MUTEX 1
     13          #if PRINT_USE_MUTEX
     14          OS_MUTEX print_mutex;
     15          #endif
     16          
     17          
     18          #define DEBUG_PORT_UART1 1
     19          #define DEBUG_PORT_UART2 0
     20          #define DEBUG_PORT_UART3 0
     21          
     22          void debug_port_init(void)
     23          {
     24          	OS_ERR os_err;
     25          
     26          	#if DEBUG_PORT_UART1
     27          	user_uart1_open();
     28          	#elif DEBUG_PORT_UART2
     29          	user_uart2_open();
     30          	#else
     31          	user_uart3_open();
     32          	#endif
     33          
     34          	OSMutexCreate(&print_mutex,"print mutex",&os_err);
     35          }
     36          
     37          
     38          void debug_port_deinit(void)
     39          {
     40          	#if DEBUG_PORT_UART1
     41          	user_uart1_close();
     42          	#elif DEBUG_PORT_UART2
     43          	user_uart2_close();
     44          	#else
     45          	user_uart3_close();
     46          	#endif
     47          }
     48          
     49          
     50          
     51          #define CMD_BUFFER_LEN 500
     52          static char buffer[CMD_BUFFER_LEN]; 
     53          void InfoPrintf (char *fmt, ...)
     54          {
     55          	#if 1
     56          	unsigned int len;
     57          	va_list arg_ptr;
     58          	
     59          	//CPU_SR_ALLOC();
     60          	//CPU_CRITICAL_ENTER();
     61          	
     62          	#if PRINT_USE_MUTEX
     63              OS_ERR os_err;
     64          	//if(print_mutex.Type != OS_OBJ_TYPE_MUTEX)
     65          	//{
     66          	//	OSMutexCreate(&print_mutex,"print mutex",&os_err);
     67          	//}
     68          	OSMutexPend(&print_mutex,0,OS_OPT_PEND_BLOCKING,NULL,&os_err);
     69          	#endif
     70          
     71          	//return;
     72          
     73          	va_start(arg_ptr, fmt);  
     74          	len = vsnprintf(buffer, CMD_BUFFER_LEN, fmt, arg_ptr);
     75          	
     76          	if(buffer[len-1] == '\n' && buffer[len-2] != '\r')
     77          	{
     78          		if(len == CMD_BUFFER_LEN)
     79          		len--;
     80          		buffer[len-1] = '\r';
     81          		buffer[len] = '\n';
     82          		len++;
     83          	}
     84          
     85          	#if DEBUG_PORT_UART1
     86          	uart1_send_data((unsigned char *)buffer,len);
     87          	#elif DEBUG_PORT_UART2
     88          	uart2_send_data((unsigned char *)buffer,len);
     89          	#else
     90          	uart3_send_data((unsigned char *)buffer,len);
     91          	#endif
     92          
     93          	va_end(arg_ptr);
     94          	
     95          	#if PRINT_USE_MUTEX
     96          	OSMutexPost(&print_mutex,OS_OPT_POST_NONE,&os_err);
     97          	#endif
     98          	
     99          	//CPU_CRITICAL_EXIT();
    100          
    101          	#endif
    102          }
    103          
    104          #define PRTF_BUFFER_LEN 120
    105          static char buffer1[PRTF_BUFFER_LEN+1]; 
    106          void BlockPrintf(char *fmt, ...)
    107          {
    108          	
    109          	//uint8_t *ptr=NULL;
    110          	//uint32_t timeOut;
    111          	unsigned int len;
    112          	//int ret;
    113          
    114          	va_list arg_ptr;
    115          
    116          	va_start(arg_ptr, fmt);  
    117          	/*
    118          	int _vsnprintf(char *buffer, size_t max_count, const char *format, va_list vArgList);
    119          　　参数说明: 
    120          　　1. char *buffer 		[out], 把生成的格式化的字符串存放在这里. 
    121          　　2. size_t max_count 	[in] , buffer可接受的最大字节数,防止产生数组越界. 
    122          　　3. const char *format 	[in] , 格式化字符串 
    123          　　4. va_list vArgList 	[in] , va_list变量. va:variable-argument:可变参数 
    124          
    125          	返回值:
    126          	如果成功调用此函数，返回写到buffer中的字符的个数（不包括结尾的'\0'）。
    127          	snprintf和vsnprintf函数不能够写多于size大小（包括结尾的'0'）的字节数。
    128          	如果输出因为以上原因被截断，
    129          	返回成功写入buffer的字符数,但不包括结尾的'\0',(如果有足够的内存空间的话)。
    130          	所以，如果返回值等于size或者大于size，表示输出到buffer的字符被截断，
    131          	如果输出过程中遇到错误，则返回一个负数。
    132          	*/
    133          	len = vsnprintf(buffer1, PRTF_BUFFER_LEN, fmt, arg_ptr);
    134          	
    135          	if(buffer1[len-1] == '\n' && buffer1[len-2] != '\r')
    136          	{
    137          		buffer1[len-1] = '\r';
    138          		buffer1[len] = '\n';
    139          		len++;
    140          	}
    141          	//ptr=(uint8_t *)buffer1;
    142          	#if DEBUG_PORT_UART1
    143          	uart1_send_data((unsigned char *)buffer1,len);
    144          	#elif DEBUG_PORT_UART2
    145          	uart2_send_data((unsigned char *)buffer1,len);
    146          	#else
    147          	uart3_send_data((unsigned char *)buffer1,len);
    148          	#endif
    149          	va_end(arg_ptr);
    150          }
    151          
    152          #endif
    153          
    154          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   BlockPrintf
        24   -> uart1_send_data
        24   -> vsnprintf
      40   InfoPrintf
        40   -> OSMutexPend
        40   -> OSMutexPost
        40   -> uart1_send_data
        40   -> vsnprintf
       0   debug_port_deinit
         0   -> user_uart1_close
       8   debug_port_init
         8   -> OSMutexCreate
         8   -> user_uart1_open


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
      12  ?_0
      58  BlockPrintf
     108  InfoPrintf
     544  buffer
          print_mutex
     124  buffer1
       4  debug_port_deinit
      20  debug_port_init

 
 668 bytes in section .bss
 214 bytes in section .text
 
 214 bytes of CODE memory
 668 bytes of DATA memory

Errors: none
Warnings: none
